apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    resourcelocker.syn.tools/target-namespace: foo
    resourcelocker.syn.tools/target-object: rbac.authorization.k8s.io.Role/test
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/part-of: resource-locker
    name: foo-test-d32555f73d8a5a0-manager
  name: foo-test-d32555f73d8a5a0-manager
  namespace: syn-resource-locker
secrets:
  - name: foo-test-d32555f73d8a5a0-manager
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: foo-test-d32555f73d8a5a0-manager
    resourcelocker.syn.tools/target-namespace: foo
    resourcelocker.syn.tools/target-object: rbac.authorization.k8s.io.Role/test
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/part-of: resource-locker
    name: foo-test-d32555f73d8a5a0-manager
  name: foo-test-d32555f73d8a5a0-manager
  namespace: syn-resource-locker
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    resourcelocker.syn.tools/target-namespace: foo
    resourcelocker.syn.tools/target-object: rbac.authorization.k8s.io.Role/test
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/part-of: resource-locker
    name: syn-resource-locker-foo-test-d32555f73d8a5a0-manager
  name: syn-resource-locker-foo-test-d32555f73d8a5a0-manager
rules:
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    resourcelocker.syn.tools/target-namespace: foo
    resourcelocker.syn.tools/target-object: rbac.authorization.k8s.io.Role/test
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/part-of: resource-locker
    name: syn-resource-locker-foo-test-d32555f73d8a5a0-manager
  name: syn-resource-locker-foo-test-d32555f73d8a5a0-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: syn-resource-locker-foo-test-d32555f73d8a5a0-manager
subjects:
  - kind: ServiceAccount
    name: foo-test-d32555f73d8a5a0-manager
    namespace: syn-resource-locker
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    resourcelocker.syn.tools/cluster-admin: This resource-locker role grants admin
      because it's otherwise impossible to manage rolebindings with unknown role references
    resourcelocker.syn.tools/target-namespace: foo
    resourcelocker.syn.tools/target-object: rbac.authorization.k8s.io.Role/test
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/part-of: resource-locker
    name: syn-resource-locker-foo-test-d32555f73d8a5a0-manager
  name: syn-resource-locker-foo-test-d32555f73d8a5a0-manager
  namespace: foo
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    resourcelocker.syn.tools/target-namespace: foo
    resourcelocker.syn.tools/target-object: rbac.authorization.k8s.io.Role/test
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/part-of: resource-locker
    name: syn-resource-locker-foo-test-d32555f73d8a5a0-manager
  name: syn-resource-locker-foo-test-d32555f73d8a5a0-manager
  namespace: foo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: syn-resource-locker-foo-test-d32555f73d8a5a0-manager
subjects:
  - kind: ServiceAccount
    name: foo-test-d32555f73d8a5a0-manager
    namespace: syn-resource-locker
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: ResourceLocker
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    name: foo-test-d32555f73d8a5a0
  name: foo-test-d32555f73d8a5a0
  namespace: syn-resource-locker
spec:
  patches:
    - id: patch1
      patchTemplate: "\"metadata\":\n  \"annotations\":\n    \"patched\": \"\""
      patchType: application/strategic-merge-patch+json
      targetObjectRef:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        name: test
        namespace: foo
  serviceAccountRef:
    name: foo-test-d32555f73d8a5a0-manager
